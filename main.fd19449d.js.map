{"version":3,"sources":["scripts/main.js"],"names":["list","document","body","querySelectorAll","sortList","employees","convertToNumber","string","number","slice","split","join","sortedList","sort","a","b","dataset","salary","forEach","employee","querySelector","append","getEmployee","map","object","name","innerText","position","age"],"mappings":";AAAA,aAoCA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAhCA,IAAMA,EAAOC,SAASC,KAAKC,iBAAiB,MAE5C,SAASC,EAASC,GACPC,SAAAA,EAAgBC,GAGhBC,OAFSD,EAAOE,MAAM,GAAGC,MAAM,KAAKC,KAAK,IAS3CC,OAJY,EAAIP,GAAWQ,KAAK,SAACC,EAAGC,GACzCT,OAAAA,EAAgBS,EAAEC,QAAQC,QAAUX,EAAgBQ,EAAEE,QAAQC,UAG9CC,QAAQ,SAAAC,GACxBlB,OAAAA,SAASC,KAAKkB,cAAc,MAAMC,OAAOF,KAI7C,SAASG,EAAYjB,GACZ,OAAA,EAAIA,GAAWkB,IAAI,SAACJ,GACnBK,IAAAA,EAAS,GAORA,OALPA,EAAOC,KAAON,EAASO,UACvBF,EAAOG,SAAWR,EAASH,QAAQW,SACnCH,EAAOP,OAASE,EAASH,QAAQC,OACjCO,EAAOI,IAAMT,EAASH,QAAQY,IAEvBJ,IAIXpB,EAASJ,GACTsB,EAAYtB","file":"main.fd19449d.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\n// write code here\n\nconst list = document.body.querySelectorAll('li');\n\nfunction sortList(employees) {\n  function convertToNumber(string) {\n    const number = +string.slice(1).split(',').join('');\n\n    return number;\n  }\n\n  const sortedList = [...employees].sort((a, b) =>\n    convertToNumber(b.dataset.salary) - convertToNumber(a.dataset.salary)\n  );\n\n  return sortedList.forEach(employee =>\n    document.body.querySelector('ul').append(employee)\n  );\n}\n\nfunction getEmployee(employees) {\n  return [...employees].map((employee) => {\n    const object = {};\n\n    object.name = employee.innerText;\n    object.position = employee.dataset.position;\n    object.salary = employee.dataset.salary;\n    object.age = employee.dataset.age;\n\n    return object;\n  });\n}\n\nsortList(list);\ngetEmployee(list);\n"]}